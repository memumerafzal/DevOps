name: CI Pipeline  # Updated workflow name to be more descriptive

on:
  push:
    branches:
      - sonar-test  # Trigger workflow on push events to the 'sonar-test' branch

jobs:
  code_quality_analysis:  # More descriptive name for the job
    name: SonarQube Code Quality Analysis  # Runs SonarQube analysis to check code quality
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout Code  
        uses: actions/checkout@v4  # Check out the repository code
        with:
          fetch-depth: 0  # Fetch entire commit history for accurate SonarQube analysis

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4  # Run SonarQube scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Use SonarQube authentication token from secrets
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # Use SonarQube server URL from secrets

      - name: SonarQube Quality Gate Check
        id: sonarqube-quality-gate-check  # Set an ID to reference in later steps
        uses: sonarsource/sonarqube-quality-gate-action@master  # Check SonarQube quality gate status
        with:
          pollingTimeoutSec: 600  # Wait up to 10 minutes for the analysis to complete
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  

      - name: Fail if Quality Gate Fails
        if: steps.sonarqube-quality-gate-check.outputs.quality-gate-status != 'PASSED'  
        run: exit 1  # Stop workflow if the SonarQube quality gate fails

  angular_build:  # More descriptive name for the job
    name: Build and Package Angular Application  # Builds an Angular project and uploads the artifact
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    needs: code_quality_analysis  # This job depends on the completion of the code quality analysis job

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4  # Check out repository code

      - name: Setup Node.js
        uses: actions/setup-node@v4  # Set up Node.js environment
        with:
          node-version: '14.21.3'  # Use Node.js version 14.21.3

      - name: Install Dependencies
        run: npm install  # Install project dependencies

      - name: Install Angular CLI
        run: npm install -g @angular/cli@14.1.0  # Install Angular CLI globally

      - name: Build Angular Project
        run: |
          ng build --configuration production  # Build the Angular project with production settings
          ls  # List files after build for debugging

      - name: Verify Build Output
        run: ls dist/template-rpm-adnare/  # Check if the build output exists

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4  # Upload built Angular files as an artifact
        with:
          name: Neutrino_FE  # Artifact name
          path: dist/template-rpm-adnare/  # Path to the built Angular files

  deploy_application:  # More descriptive name for the deployment job
    name: Deploy Angular Application to Windows Server  # Deploys the Angular build to a Windows server
    runs-on: neutrino-fe-production-server  # This assumes a self-hosted runner named 'neutrino-fe-production-server'
    needs: [code_quality_analysis, angular_build]  # Wait for both previous jobs to finish

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4  # Download the Angular build artifact
        with:
          name: Neutrino_FE  # Name of the artifact
          path: downloaded_artifact_fe_UAT  # Destination path for downloaded files

      - name: Backup and Deploy Application
        run: python F:\Pipelines-Data\BackingUp_and_Deploying_FE_UAT.py  # Run a Python script to handle backup and deployment
        shell: cmd  # Execute the command in a Windows command shell

# Renamed build job to code_quality_analysis with a clearer name and job description.
# Renamed filebuild job to angular_build to specify it builds an Angular project.
# Renamed deploy job to deploy_application for clarity.
# Updated job name fields for better readability.